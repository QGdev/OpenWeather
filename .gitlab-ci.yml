# Derivated from Gitlab original template for Android CI/CD
# Adapted in order to work with Gradle 8 which work with JDK 17
image: debian:latest

# Enable cache to speed up the CI process
cache:
  key: ${CI_PROJECT_ID}-${CI_COMMIT_SHA}
  paths:
    - .gradle/
    - /android-home/


variables:

  # ANDROID_COMPILE_SDK is the version of Android you're compiling with.
  # It should match compileSdkVersion.
  ANDROID_COMPILE_SDK: "32"

  # ANDROID_BUILD_TOOLS is the version of the Android build tools you are using.
  # It should match buildToolsVersion.
  ANDROID_BUILD_TOOLS: "32.0.0"

  # It's what version of the command line tools we're going to download from the official site.
  # Official Site-> https://developer.android.com/studio/index.html
  # There, look down below at the cli tools only, sdk tools package is of format:
  #        commandlinetools-os_type-ANDROID_SDK_TOOLS_latest.zip
  # when the script was last modified for latest compileSdkVersion, it was which is written down below
  ANDROID_SDK_TOOLS: "9477386"


# Packages installation before running script
before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget unzip lib32stdc++6 lib32z1 openjdk-17-jdk
  
  # Setup path as android_home for moving/exporting the downloaded sdk into it
  - export ANDROID_HOME="${PWD}/android-home"
  - export ROOT_HOME="${PWD}/"
  # Create a new directory at specified location
  - install -d $ANDROID_HOME
  
  # Check if the command-line tools archive is in the cache and extract it if it is
  - >
    if [ -f android-home/cmdline-tools.zip ]; then
      echo "Command-line tools archive found in cache, skipping download";
      pushd $ANDROID_HOME;
      unzip -q android-home/cmdline-tools.zip;
      popd;
    fi

  # If the archive is not in the cache, download it and extract it
  - >
    if [ ! -f android-home/cmdline-tools.zip ]; then
      wget --output-document=$ANDROID_HOME/cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip;
      pushd $ANDROID_HOME;
      unzip -q cmdline-tools.zip;
      popd;
      # Cache the downloaded archive for future job runs
      # mv $ANDROID_HOME/cmdline-tools.zip android-home/;
    fi

  - export PATH=$PATH:${ANDROID_HOME}/cmdline-tools/bin/

  # use yes to accept all licenses
  - yes | sdkmanager --sdk_root=${ANDROID_HOME} --licenses 1> /dev/null || true
  - sdkmanager --sdk_root=${ANDROID_HOME} "platforms;android-${ANDROID_COMPILE_SDK}"
  - sdkmanager --sdk_root=${ANDROID_HOME} "platform-tools"
  - sdkmanager --sdk_root=${ANDROID_HOME} "build-tools;${ANDROID_BUILD_TOOLS}"

  # Not necessary, but just for surity
  #- chmod +x ./gradlew

# Basic android and gradle stuff
# Check linting
lintDebug:
  interruptible: true
  stage: build
  script:
    - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint 

# Make Project
assembleDebug:
  interruptible: true
  stage: build
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
      - app/build/outputs/

# Run all tests, if any fails, interrupt the pipeline(fail it)
debugTests:
  interruptible: true
  stage: test
  script:
    - ./gradlew -Pci --console=plain :app:testDebug
